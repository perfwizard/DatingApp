// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using NGH.API.DataAccess;
using System;

namespace NGH.API.Migrations
{
    [DbContext(typeof(NGHDataContext))]
    [Migration("20180628160313_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NGH.API.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Balance");

                    b.Property<string>("BillingAddress");

                    b.Property<string>("CreateBy");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Name");

                    b.Property<string>("ShippingAddress");

                    b.Property<string>("TelNo");

                    b.Property<string>("UpdateBy");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("NGH.API.Models.DeliveryNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("ActualWeight");

                    b.Property<decimal>("Balance");

                    b.Property<string>("BillingAddress");

                    b.Property<string>("CreateBy");

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("CustomerId");

                    b.Property<decimal>("Discount");

                    b.Property<DateTime>("DnDate");

                    b.Property<string>("DnNo");

                    b.Property<DateTime>("DueDate");

                    b.Property<decimal>("GoldPercent");

                    b.Property<decimal>("GrandTotal");

                    b.Property<string>("InternalMemo");

                    b.Property<bool>("IssueInvoice");

                    b.Property<string>("PIC");

                    b.Property<decimal>("PaidAmount");

                    b.Property<string>("Remark");

                    b.Property<string>("ShippingAddress");

                    b.Property<int>("Status");

                    b.Property<decimal>("StdPrice");

                    b.Property<decimal>("Subtotal");

                    b.Property<decimal>("TradePrice");

                    b.Property<string>("UpdateBy");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<decimal>("VatAmount");

                    b.Property<decimal>("VatRate");

                    b.HasKey("Id");

                    b.ToTable("DeliveryNotes");
                });

            modelBuilder.Entity("NGH.API.Models.DeliveryNoteLine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Discount");

                    b.Property<int>("DnId");

                    b.Property<decimal>("LineTotal");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<decimal>("Qty");

                    b.Property<string>("UOM");

                    b.Property<decimal>("UnitPrice");

                    b.Property<decimal>("Weight");

                    b.HasKey("ID");

                    b.ToTable("DeliveryNoteLines");
                });

            modelBuilder.Entity("NGH.API.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreateBy");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CustProductCode");

                    b.Property<decimal>("EstWeight");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductName");

                    b.Property<decimal>("StdPrice");

                    b.Property<decimal>("StdWeight");

                    b.Property<string>("UOM");

                    b.Property<string>("UpdateBy");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<decimal>("Wage");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("NGH.API.Models.ProductDiscount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreateBy");

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("CutomerId");

                    b.Property<decimal>("DiscPrice");

                    b.Property<decimal>("Discount");

                    b.Property<bool>("IsPercent");

                    b.Property<int>("ProductId");

                    b.Property<string>("UpdateBy");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("ProductDiscount");
                });

            modelBuilder.Entity("NGH.API.Models.StockTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("CreateBy");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("DocNo");

                    b.Property<int?>("FromLocationId");

                    b.Property<string>("PIC");

                    b.Property<int>("ProductId");

                    b.Property<decimal>("Qty");

                    b.Property<bool>("ReceiveFlag");

                    b.Property<int>("Status");

                    b.Property<DateTime>("StockDate");

                    b.Property<int?>("ToLocationId");

                    b.Property<string>("UOM");

                    b.Property<string>("UpdateBy");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<decimal>("Weight");

                    b.HasKey("Id");

                    b.ToTable("StockTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
